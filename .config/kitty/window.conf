# remember_window_size  yes
# initial_window_width  640
# initial_window_height 400

#: If enabled, the OS Window size will be remembered so that new
#: instances of kitty will have the same size as the previous
#: instance. If disabled, the OS Window will initially have size
#: configured by initial_window_width/height, in pixels. You can use a
#: suffix of "c" on the width/height values to have them interpreted
#: as number of cells instead of pixels.

# enabled_layouts *

#: The enabled window layouts. A comma separated list of layout names.
#: The special value all means all layouts. The first listed layout
#: will be used as the startup layout. Default configuration is all
#: layouts in alphabetical order. For a list of available layouts, see
#: the layouts <https://sw.kovidgoyal.net/kitty/overview/#layouts>.

# window_resize_step_cells 2
# window_resize_step_lines 2

#: The step size (in units of cell width/cell height) to use when
#: resizing kitty windows in a layout with the shortcut
#: start_resizing_window. The cells value is used for horizontal
#: resizing, and the lines value is used for vertical resizing.

# window_border_width 0.5pt

#: The width of window borders. Can be either in pixels (px) or pts
#: (pt). Values in pts will be rounded to the nearest number of pixels
#: based on screen resolution. If not specified, the unit is assumed
#: to be pts. Note that borders are displayed only when more than one
#: window is visible. They are meant to separate multiple windows.

# draw_minimal_borders yes

#: Draw only the minimum borders needed. This means that only the
#: borders that separate the window from a neighbor are drawn. Note
#: that setting a non-zero window_margin_width overrides this and
#: causes all borders to be drawn.

# window_margin_width 0

#: The window margin (in pts) (blank area outside the border). A
#: single value sets all four sides. Two values set the vertical and
#: horizontal sides. Three values set top, horizontal and bottom. Four
#: values set top, right, bottom and left.

# single_window_margin_width -1

#: The window margin to use when only a single window is visible (in
#: pts). Negative values will cause the value of window_margin_width
#: to be used instead. A single value sets all four sides. Two values
#: set the vertical and horizontal sides. Three values set top,
#: horizontal and bottom. Four values set top, right, bottom and left.

window_padding_width 5

#: The window padding (in pts) (blank area between the text and the
#: window border). A single value sets all four sides. Two values set
#: the vertical and horizontal sides. Three values set top, horizontal
#: and bottom. Four values set top, right, bottom and left.

# placement_strategy center

#: When the window size is not an exact multiple of the cell size, the
#: cell area of the terminal window will have some extra padding on
#: the sides. You can control how that padding is distributed with
#: this option. Using a value of center means the cell area will be
#: placed centrally. A value of top-left means the padding will be
#: only at the bottom and right edges.

# active_border_color #00ff00

#: The color for the border of the active window. Set this to none to
#: not draw borders around the active window.

# inactive_border_color #cccccc

#: The color for the border of inactive windows.

# bell_border_color #ff5a00

#: The color for the border of inactive windows in which a bell has
#: occurred.

# inactive_text_alpha 1.0

#: Fade the text in inactive windows by the specified amount (a number
#: between zero and one, with zero being fully faded).

hide_window_decorations yes

#: Hide the window decorations (title-bar and window borders) with
#: yes. On macOS, titlebar-only and titlebar-and-corners can be used
#: to only hide the titlebar and the rounded corners. Whether this
#: works and exactly what effect it has depends on the window
#: manager/operating system. Note that the effects of changing this
#: option when reloading config are undefined. When using titlebar-
#: only, it is useful to also set window_margin_width and
#: placement_strategy to prevent the rounded corners from clipping
#: text. Or use titlebar-and-corners.

# window_logo_path none

#: Path to a logo image. Must be in PNG format. Relative paths are
#: interpreted relative to the kitty config directory. The logo is
#: displayed in a corner of every kitty window. The position is
#: controlled by window_logo_position. Individual windows can be
#: configured to have different logos either using the launch action
#: or the remote control <https://sw.kovidgoyal.net/kitty/remote-
#: control/> facility.

# window_logo_position bottom-right

#: Where to position the window logo in the window. The value can be
#: one of: top-left, top, top-right, left, center, right, bottom-left,
#: bottom, bottom-right.

# window_logo_alpha 0.5

#: The amount the logo should be faded into the background. With zero
#: being fully faded and one being fully opaque.

# resize_debounce_time 0.1 0.5

#: The time to wait before redrawing the screen during a live resize
#: of the OS window, when no new resize events have been received,
#: i.e. when resizing is either paused or finished. On platforms such
#: as macOS, where the operating system sends events corresponding to
#: the start and end of a live resize, the second number is used for
#: redraw-after-pause since kitty can distinguish between a pause and
#: end of resizing.  On such systems the first number is ignored and
#: redraw is immediate after end of resize.  On other systems the
#: first number is used so that kitty is "ready" quickly after the end
#: of resizing, while not also continuously redrawing, to save energy.

# resize_in_steps no

#: Resize the OS window in steps as large as the cells, instead of
#: with the usual pixel accuracy. Combined with initial_window_width
#: and initial_window_height in number of cells, this option can be
#: used to keep the margins as small as possible when resizing the OS
#: window. Note that this does not currently work on Wayland.

# visual_window_select_characters 1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ

#: The list of characters for visual window selection. For example,
#: for selecting a window to focus on with focus_visible_window. The
#: value should be a series of unique numbers or alphabets, case
#: insensitive, from the set [0-9A-Z]. Specify your preference as a
#: string of characters.

confirm_os_window_close -1

#: Ask for confirmation when closing an OS window or a tab with at
#: least this number of kitty windows in it by window manager (e.g.
#: clicking the window close button or pressing the operating system
#: shortcut to close windows) or by the close_tab action. A value of
#: zero disables confirmation. This confirmation also applies to
#: requests to quit the entire application (all OS windows, via the
#: quit action). Negative values are converted to positive ones,
#: however, with shell_integration enabled, using negative values
#: means windows sitting at a shell prompt are not counted, only
#: windows where some command is currently running. Note that if you
#: want confirmation when closing individual windows, you can map the
#: close_window_with_confirmation action.
